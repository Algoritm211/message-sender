{"version":3,"sources":["components/Table/TableRow/TableRow.module.scss","Header/Header.module.scss","utils/stringCutter.js","components/Table/TableRow/TableRow.jsx","redux/sendForm-selector.js","components/Table/Table.jsx","components/FormBlock/FormMessage/FormInput/FormInput.jsx","components/FormBlock/FormMessage/UploadComponent/UploadComponent.jsx","components/FormBlock/FormMessage/ValidationFormMessage.js","redux/sendForm-reducer.js","components/FormBlock/FormMessage/FormMessage.jsx","components/FormBlock/LoadingScreen/LoadingScreen.jsx","components/FormBlock/FormBlock.jsx","Header/Header.jsx","App.js","reportWebVitals.js","redux/redux-store.js","index.js","components/FormBlock/FormMessage/UploadComponent/UploadComponent.module.scss","components/FormBlock/FormMessage/FormMessage.module.scss","components/Table/Table.module.scss","App.module.scss","components/FormBlock/FormBlock.module.scss","components/FormBlock/LoadingScreen/LoadingScreen.module.scss"],"names":["module","exports","stringCutter","str","sizeStr","size","length","slice","TableRow","props","statusColor","statusText","message","status","className","classNames","classes","tableRow","main","cell","date","themeCell","emailTopic","style","color","getIsLoading","state","sendFormReducer","loading","getMessages","messages","Table","useSelector","tableRowsBlock","map","id","table","Fragment","FormInput","name","placeholder","formik","refDiv","useRef","errors","touched","current","parentNode","classList","add","errorContainer","remove","ref","type","onChange","handleChange","value","values","onBlur","handleBlur","error","UploadComponent","useState","isOnDrag","setIsOnDrag","onDrag","useEffect","dropZone","document","getElementById","addEventListener","removeEventListener","setFieldValue","useDropzone","accept","onDrop","acceptedFiles","onDragLeave","getRootProps","getInputProps","isDragActive","classesForFileInput","blockFileInput","dropzone","dragAndDrop","fileInput","validationSchema","yup","firstNameFrom","required","firstNameTo","emailFrom","email","emailTo","files","TOGGLE_LOADING","SET_MESSAGE","MESSAGE_SUCCESSFUL_SENT","initialState","actions","FormMessage","dispatch","useDispatch","useFormik","initialValues","onSubmit","messageObj","a","Date","now","toString","setTimeout","handleSubmit","formMessage","fromToInputs","formLetterTheme","textAreaBlock","fileList","file","index","onDelete","path","filteredFilesWithoutDelete","filter","onDeleteFile","submitButton","FileBlock","fileBlock","deleteButton","onClick","LoadingScreen","loadingScreen","FormBlock","formBlock","Header","header","geometricFigures","circle","rectangle","parallelogram","App","container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","window","__store__","ReactDOM","render"],"mappings":"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","file":"static/js/main.7ec73bec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableRow\":\"TableRow_tableRow__2c_QN\",\"main\":\"TableRow_main__z8znn\",\"cell\":\"TableRow_cell__2wQjz\",\"themeCell\":\"TableRow_themeCell__1TUoh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__X4Aro\",\"geometricFigures\":\"Header_geometricFigures__3733A\",\"circle\":\"Header_circle__2ZQ1V\",\"rectangle\":\"Header_rectangle__3wy2w\",\"parallelogram\":\"Header_parallelogram__3R5Rj\"};","export function stringCutter (str, sizeStr) {\n  const size = sizeStr\n\n  if (str.length > size) {\n    return str.slice(0, size) + '...'\n  }\n  return str\n}","import React from 'react';\nimport classes from \"./TableRow.module.scss\";\nimport classNames from 'classnames'\nimport {stringCutter} from \"../../../utils/stringCutter\";\n\nconst TableRow = (props) => {\n\n  let statusColor\n  let statusText\n\n  if (props.message.status === 'pending') {\n    statusColor = '#666464'\n    statusText = 'В очереди'\n  } else if (props.message.status === 'completed') {\n    statusColor = '#03A100'\n    statusText = 'Отправлено'\n  }\n\n\n  return (\n    <div className={classNames(classes.tableRow, {[classes.main]: props.main})}>\n      <div className={classes.cell}>\n        {props.message.date}\n      </div>\n      <div className={classNames(classes.cell, classes.themeCell)}>\n        {stringCutter(props.message.emailTopic, 45)}\n      </div>\n      <div className={classes.cell} style={{color: statusColor}}>\n        {statusText || 'Статус'}\n      </div>\n    </div>\n  );\n};\n\nexport default TableRow;\n\n\n\n","\nexport const getIsLoading = (state) => {\n  return state.sendFormReducer.loading\n}\n\n\nexport const getMessages = (state) => {\n  return state.sendFormReducer.messages\n}\n","import React from 'react'\nimport classes from './Table.module.scss'\nimport TableRow from \"./TableRow/TableRow\";\nimport {useSelector} from \"react-redux\";\nimport {getMessages} from \"../../redux/sendForm-selector\";\n\nconst Table = () => {\n  const messages = useSelector(getMessages)\n\n  const tableRowsBlock = messages.map(message => {\n    return (\n      <TableRow message={message} key={message.id}/>\n    )\n  })\n  \n  const headerState = {date: 'Дата', emailTopic: 'Тема', status: 'Статус'}\n  return (\n    <div className={classes.table}>\n      <h3>Отправленные сообщения</h3>\n      {messages.length === 0\n        ? <span>Сообщения еще не отправлялись</span>\n        : <React.Fragment>\n          <TableRow main={true} message={headerState}/>\n          {tableRowsBlock}\n        </React.Fragment>\n      }\n    </div>\n  );\n}\n;\n\nexport default Table;","import React, {useRef} from \"react\";\nimport classes from \"../FormMessage.module.scss\";\n\nconst FormInput = ({name, placeholder, formik}) => {\n\n  const refDiv = useRef()\n\n  if (formik.errors[name] && formik.touched[name]) {\n    refDiv.current?.parentNode.classList.add(classes.errorContainer)\n  } else if (!formik.errors[name]) {\n    refDiv.current?.parentNode.classList.remove(classes.errorContainer)\n  }\n\n  return (\n    <React.Fragment>\n      <div ref={refDiv}>\n        <input\n          id={name}\n          name={name}\n          type=\"text\"\n          placeholder={placeholder}\n          onChange={formik.handleChange}\n          value={formik.values[name]}\n          onBlur={formik.handleBlur}\n        />\n        {formik.touched[name]\n        &&\n        formik.errors[name]\n        &&\n        <span className={classes.error}>{formik.errors[name]}</span>\n        }\n      </div>\n\n    </React.Fragment>\n  )\n}\nexport default FormInput","import {useDropzone} from \"react-dropzone\";\nimport classes from \"./UploadComponent.module.scss\";\nimport React, {useEffect, useState} from \"react\";\n\n\nconst UploadComponent = props => {\n  const [isOnDrag, setIsOnDrag] = useState(false)\n\n  const onDrag = () => {\n    setIsOnDrag(true)\n  }\n\n  useEffect(() => {\n    const dropZone = document.getElementById('dropzone')\n    dropZone.addEventListener('dragenter', onDrag)\n\n    return () => {\n      dropZone.removeEventListener('dragenter', onDrag)\n    }\n  })\n\n  const {setFieldValue} = props;\n  const {getRootProps, getInputProps, isDragActive,} = useDropzone({\n    accept: \"image/*\",\n    onDrop: acceptedFiles => {\n      setFieldValue(\"files\", acceptedFiles);\n      setIsOnDrag(false)\n    },\n    onDragLeave: () => {\n      setIsOnDrag(false)\n    }\n  });\n\n  let classesForFileInput = classes.blockFileInput\n\n  if (isOnDrag) {\n\n    classesForFileInput = classes.dropzone\n  }\n\n  return (\n    <div>\n      <div {...getRootProps({className: classesForFileInput})}>\n        <input {...getInputProps()} />\n        {isDragActive || isOnDrag ? (\n          <React.Fragment>\n            <div className={classes.dragAndDrop}>\n              <h2>Бросайте файлы сюда, я ловлю</h2>\n              <span>Мы принимаем картинки (jpg, png, gif), офисные файлы (doc, xls, pdf) и zip-архивы</span>\n            </div>\n            <div className={classes.fileInput}>\n              <i className=\"fas fa-paperclip\"></i>\n              Прикрепить файлы\n            </div>\n          </React.Fragment>\n        ) : (\n          <div className={classes.fileInput}>\n            <i className=\"fas fa-paperclip\"></i>\n            Прикрепить файлы\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\n\nexport default UploadComponent","import * as yup from \"yup\";\n\nexport const validationSchema = yup.object({\n  firstNameFrom: yup\n    .string('Введите имя отправителя')\n    .required('Это поле обязательно для заполнения'),\n  firstNameTo: yup\n    .string('Введите имя получателя')\n    .required('Это поле обязательно для заполнения'),\n  emailFrom: yup\n    .string('Введите почту отправителя')\n    .email('Введите корректный email-адрес')\n    .required('Это поле обязательно для заполнения'),\n  emailTo: yup\n    .string('Введите почту получателя')\n    .email('Введите корректный email-адрес')\n    .required('Это поле обязательно для заполнения'),\n  emailTopic: yup\n    .string('Введите тему письма')\n    .required('Это поле обязательно для заполнения'),\n  message: yup\n    .string('Введите сообщение'),\n  files: yup.mixed()\n})","\n\n\n// MESSAGE SCHEME\n// emailFrom: \"\"\n// emailTo: \"\"\n// emailTopic: \"\"\n// files: [File]\n// firstNameFrom: \"\"\n// firstNameTo: \"\"\n// message: \"\"\n// status\n// id\n\nconst TOGGLE_LOADING = 'interview-sender/sendForm/TOGGLE_LOADING'\nconst SET_MESSAGE = 'interview-sender/sendForm/SET_MESSAGE'\nconst MESSAGE_SUCCESSFUL_SENT = 'interview-sender/sendForm/MESSAGE_SUCCESSFUL_SENT'\n\nconst initialState = {\n  loading: false,\n  messages: []\n}\n\n\nexport const sendFormReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case TOGGLE_LOADING: {\n      return {\n        ...state,\n        loading: action.loading\n      }\n    }\n    case SET_MESSAGE:\n      return {\n        ...state,\n        messages: [...state.messages, action.message]\n      }\n    case MESSAGE_SUCCESSFUL_SENT:\n      return {\n        ...state,\n        messages: state.messages.map(message => {\n          if (message.id === action.id) {\n            return {...message, status: 'completed'}\n          }\n          return message\n        })\n      }\n    default:\n      return state\n  }\n}\n\n\nconst actions = {\n  toggleLoading(loading) {\n    return {\n      type: TOGGLE_LOADING,\n      loading: loading\n    }\n  },\n\n  setMessage(message) {\n    return {\n      type: SET_MESSAGE,\n      message: message\n    }\n  },\n\n  messageSuccessfulSent(id) {\n    return {\n      type: MESSAGE_SUCCESSFUL_SENT,\n      id: id\n    }\n  }\n}\n\n\nexport const addNewMessage = (messageObj) => async (dispatch) => {\n  messageObj.status = 'pending'\n  messageObj.id = Date.now()\n  messageObj.date = new Date().toString().slice(4, 15)\n  dispatch(actions.setMessage(messageObj))\n  dispatch(actions.toggleLoading(true))\n  setTimeout(() => {\n    dispatch(actions.messageSuccessfulSent(messageObj.id))\n    dispatch(actions.toggleLoading(false))\n  }, 3000)\n}","import React from 'react';\nimport {useFormik} from \"formik\";\nimport classes from './FormMessage.module.scss'\nimport classNames from 'classnames'\nimport FormInput from \"./FormInput/FormInput\";\nimport {stringCutter} from \"../../../utils/stringCutter\";\nimport UploadComponent from \"./UploadComponent/UploadComponent\";\nimport {validationSchema} from \"./ValidationFormMessage\";\nimport {useDispatch} from \"react-redux\";\nimport {addNewMessage} from \"../../../redux/sendForm-reducer\";\n\nconst FormMessage = () => {\n\n  const dispatch = useDispatch()\n\n  const formik = useFormik({\n    initialValues: {\n      firstNameFrom: '',\n      firstNameTo: '',\n      emailFrom: '',\n      emailTo: '',\n      emailTopic: '',\n      message: '',\n      files: [],\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      dispatch(addNewMessage(values))\n    },\n  });\n\n  const onDeleteFile = (path) => {\n    const filteredFilesWithoutDelete = formik.values.files.filter(file => {\n      return file.path !== path\n    })\n    formik.setFieldValue('files', filteredFilesWithoutDelete)\n  }\n\n  return (\n    <div>\n      <h2>Messages Sender</h2>\n      <form onSubmit={formik.handleSubmit} className={classes.formMessage}>\n        От кого\n        <div className={classNames(classes.fromToInputs)}>\n          <FormInput\n            name=\"firstNameFrom\"\n            placeholder={'Имя'}\n            formik={formik}\n          />\n          <FormInput\n            name=\"emailFrom\"\n            placeholder={'Email'}\n            formik={formik}\n          />\n        </div>\n        Кому\n        <div className={classes.fromToInputs}>\n          <FormInput\n            name=\"firstNameTo\"\n            placeholder={'Имя'}\n            formik={formik}\n          />\n          <FormInput\n            name=\"emailTo\"\n            placeholder={'Email'}\n            formik={formik}\n          />\n        </div>\n        Тема письма\n        <div className={classes.formLetterTheme}>\n          <FormInput\n            name=\"emailTopic\"\n            placeholder={'Тема письма'}\n            formik={formik}\n          />\n        </div>\n        Сообщение\n        <div className={classes.textAreaBlock}>\n          <textarea\n            id=\"message\"\n            name=\"message\"\n            type=\"text\"\n            onChange={formik.handleChange}\n            value={formik.values.message}\n          />\n        </div>\n\n        <div className={classes.fileList}>\n          {formik.values.files\n          &&\n          formik.values.files.map((file, index) => {\n            return <FileBlock file={file} key={index} onDelete={() => onDeleteFile(file.path)}/>\n          })\n          }\n        </div>\n\n        <UploadComponent setFieldValue={formik.setFieldValue}/>\n        <button\n          type=\"submit\"\n          className={classes.submitButton}\n        >Отправить\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default FormMessage;\n\n\nconst FileBlock = (props) => {\n\n  return (\n    <div className={classes.fileBlock}>\n      <div>\n        <i className=\"fas fa-paperclip\"></i>\n      </div>\n      <div>\n        {stringCutter(props.file.name, 15)}\n      </div>\n      <div className={classes.deleteButton} onClick={props.onDelete}>\n        <i className=\"fas fa-trash\"></i> Удалить\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport classes from './LoadingScreen.module.scss'\n\nconst LoadingScreen = () => {\n  return (\n    <div className={classes.loadingScreen}>\n      <h2>Сообщение поставлено в очередь на отправку</h2>\n      <span>Совсем скоро сообщение вылетит из сервера, и будет двигаться в сторону почты получателя «abc@my.com» со скоростью электронов.</span>\n    </div>\n  );\n};\n\nexport default LoadingScreen;","import React from 'react';\nimport classes from './FormBlock.module.scss'\nimport FormMessage from \"./FormMessage/FormMessage\";\nimport {useSelector} from \"react-redux\";\nimport {getIsLoading} from \"../../redux/sendForm-selector\";\nimport LoadingScreen from \"./LoadingScreen/LoadingScreen\";\n\nconst FormBlock = () => {\n\n  const isLoading = useSelector(getIsLoading)\n\n  if (isLoading) {\n    return (\n      <LoadingScreen />\n    )\n  }\n\n  return (\n    <div id={'dropzone'} className={classes.formBlock}>\n      <FormMessage />\n    </div>\n  );\n};\n\nexport default FormBlock;","import React from 'react';\nimport classes from './Header.module.scss'\n\nconst Header = () => {\n  return (\n    <div className={classes.header}>\n      <div className={classes.geometricFigures}>\n        <div className={classes.circle}></div>\n        <div className={classes.rectangle}></div>\n        <div className={classes.circle}></div>\n        <div className={classes.parallelogram}></div>\n      </div>\n\n    </div>\n  );\n};\n\nexport default Header;","import Table from \"./components/Table/Table\";\nimport classes from './App.module.scss'\nimport FormBlock from \"./components/FormBlock/FormBlock\";\nimport Header from \"./Header/Header\";\n\nfunction App() {\n  return (\n    <div className={classes.container}>\n      <Header />\n      <FormBlock />\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport thunkMiddleware from 'redux-thunk'\nimport {sendFormReducer} from \"./sendForm-reducer\";\n\n\n\nconst rootReducer = combineReducers({\n  sendFormReducer: sendFormReducer\n})\n\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\n\nwindow.__store__ = store\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/redux-store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blockFileInput\":\"UploadComponent_blockFileInput__2D_SU\",\"fileInput\":\"UploadComponent_fileInput__vFWIQ\",\"dragAndDrop\":\"UploadComponent_dragAndDrop__3v7Ul\",\"dropzone\":\"UploadComponent_dropzone__OwVVG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formMessage\":\"FormMessage_formMessage__2eLGQ\",\"fromToInputs\":\"FormMessage_fromToInputs__1974Z\",\"formLetterTheme\":\"FormMessage_formLetterTheme__1Lc2B\",\"textAreaBlock\":\"FormMessage_textAreaBlock__2-1WF\",\"errorContainer\":\"FormMessage_errorContainer__KVDSh\",\"submitButton\":\"FormMessage_submitButton__39XiR\",\"error\":\"FormMessage_error__IJzUE\",\"fileList\":\"FormMessage_fileList__3YH97\",\"fileBlock\":\"FormMessage_fileBlock__13C_n\",\"deleteButton\":\"FormMessage_deleteButton__INLpP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__2OuB7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__eSJ6i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formBlock\":\"FormBlock_formBlock__2-2jz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingScreen\":\"LoadingScreen_loadingScreen__3nR-h\"};"],"sourceRoot":""}